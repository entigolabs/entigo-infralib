#Business account setup following best pratices
#Networks are created over two AZs and each has it's own NAT gw.
#Internal and external DNS zones are created
#Service mesh with Istio is used
#By default elasticache and intra subnets are disabled, but can be enabled on demand.

source: https://github.com/entigolabs/entigo-infralib-release
version: stable
agent_version: latest
steps:
  - name: network
    type: terraform
    workspace: test
    approve: minor
    modules:
      - name: vpc
        source: aws/vpc
        version: stable
        inputs:
          one_nat_gateway_per_az: true
          azs: 2
          intra_subnets: |
            []
          elasticache_subnets: |
            []

  - name: infrastructure
    type: terraform
    workspace: test
    version: stable
    vpc_id: {{ .ssm.network.vpc.vpc_id }}
    vpc_subnet_ids: [{{ .ssm.network.vpc.private_subnets }}]
    vpc_security_group_ids: [{{ .ssm.network.vpc.pipeline_security_group }}]
    approve: minor
    modules:
      - name: dns
        source: aws/route53
        version: stable
      - name: eks
        source: aws/eks
        version: stable
        inputs:
          vpc_id: {{ .ssm.network.vpc.vpc_id }}
          private_subnets: |
            [{{ .ssm.network.vpc.private_subnets }}]
          public_subnets: |
            [{{ .ssm.network.vpc.public_subnets }}]
          eks_api_access_cidrs: |
            [{{ .ssm.network.vpc.private_subnet_cidrs }}]
          eks_main_min_size: 4
          eks_main_max_size: 8
          eks_spot_max_size: 0
          eks_db_max_size: 0
          cluster_enabled_log_types: |
            []
  - name: helm
    type: terraform
    workspace: test
    version: stable
    vpc_id: {{ .ssm.network.vpc.vpc_id }}
    vpc_subnet_ids: [{{ .ssm.network.vpc.private_subnets }}]
    vpc_security_group_ids: [{{ .ssm.network.vpc.pipeline_security_group }}]
    approve: major
    modules:
      - name: crossplane
        source: aws/crossplane
        version: stable
        inputs:
          eks_oidc_provider: {{ .ssm.infrastructure.eks.oidc_provider }}
          eks_oidc_provider_arn: {{ .ssm.infrastructure.eks.oidc_provider_arn }}
          eks_region: {{ .ssm.infrastructure.eks.region }}
          eks_account: {{ .ssm.infrastructure.eks.account }}
      - name: argocd
        source: aws/argocd
        version: stable
        inputs:
          branch: "main"
          namespace: "argocd"
          name: "argocd"
          argocd_apps_name: "ep-applications"
  - name: applications
    type: argocd-apps
    workspace: test
    version: stable
    vpc_id: {{ .ssm.network.vpc.vpc_id }}
    vpc_subnet_ids: [{{ .ssm.network.vpc.private_subnets }}]
    vpc_security_group_ids: [{{ .ssm.network.vpc.pipeline_security_group }}]
    repo_url: {{ .ssm.helm.argocd.repo_url }}
    modules:
      - name: aws-alb
        source: aws-alb
        version: stable
        inputs:
          aws-load-balancer-controller:
            clusterName: {{ .ssm.infrastructure.eks.cluster_name }}
      - name: crossplane-system
        source: crossplane
        version: stable
      - name: external-dns
        source: external-dns
        version: stable
      - name: istio-base
        source: istio-base
        version: stable
      - name: istio-system
        source: istio-istiod
        version: stable
      - name: istio-gateway
        source: istio-gateway
        version: stable
      - name: external-secrets
        source: external-secrets
        version: stable
      - name: aws-storageclass
        source: aws-storageclass
        version: stable

