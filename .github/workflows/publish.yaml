name: Publish

on:
  workflow_dispatch:

jobs:
  release:   
    runs-on: ubuntu-latest
    name: Publish
    steps:
    - name: Get latest release
      id: get_latest_release
      uses: actions/github-script@v6
      with:
        script: |
          const latestStableRelease = await github.rest.repos.getLatestRelease({ owner: context.repo.owner, repo: context.repo.repo });
          if (latestStableRelease) {
            core.setOutput('release_tag', latestStableRelease.data.tag_name);
            core.info('Latest stable release tag: ' + latestStableRelease.data.tag_name);
          } else {
            core.setFailed('No stable releases found');
          }

    - name: Checkout code of latest release
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.get_latest_release.outputs.release_tag }}
    
    - name: Set up SSH key
      run: |
        mkdir ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        
    - name: Clone the target repository and copy files
      run: |
        git clone git@github.com:entigolabs/entigo-infralib-release.git entigo-infralib-release
        rsync -av --exclude '*/test' --exclude '*/test.sh' --exclude '*/go.mod' --exclude '*/go.sum' --exclude 'modules/aws/aws-nuke-config.yml' --exclude 'modules/aws/nuke.sh' modules entigo-infralib-release/
        cd entigo-infralib-release && git config user.name "GitHub Actions" && git config user.email "actions@github.com" && git add --all && git commit -a -m"Release ${{ steps.get_latest_release.outputs.release_tag }}" && git push && git tag -a ${{ steps.get_latest_release.outputs.release_tag }} -m "Release ${{ steps.get_latest_release.outputs.release_tag }}" && git push origin ${{ steps.get_latest_release.outputs.release_tag }} || echo "Nothing to publish"
        


