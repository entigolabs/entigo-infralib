{{- if and (eq .Values.global.cloudProvider "aws") .Values.global.enablePushSecret }}

apiVersion: iam.aws.crossplane.io/v1beta1
kind: Policy
metadata:
  name: {{ .Release.Name }}-push
spec:
  forProvider:
    name: {{ .Release.Name }}-push
    tags:
      - key: created-by
        value: entigo
    document: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "secretsmanager:GetResourcePolicy",
              "secretsmanager:GetSecretValue",
              "secretsmanager:DescribeSecret",
              "secretsmanager:ListSecretVersionIds",
              "secretsmanager:ListSecrets",
              "secretsmanager:CreateSecret",
              "secretsmanager:DeleteSecret",
              "secretsmanager:TagResource"
            ],
            "Resource": [
              "arn:aws:secretsmanager:{{ .Values.global.aws.region }}:{{ .Values.global.aws.account }}:secret:*"
            ]
          }
        ]
      }

  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}

---
apiVersion: iam.aws.crossplane.io/v1beta1
kind: Role
metadata:
  name: {{ .Release.Name }}-push
spec:
  forProvider:
    tags:
      - key: created-by
        value: entigo
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Federated": "arn:aws:iam::{{ .Values.global.aws.account }}:oidc-provider/{{ .Values.global.aws.clusterOIDC }}"
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
              "StringEquals": {
                "{{ .Values.global.aws.clusterOIDC }}:aud": "sts.amazonaws.com",
                "{{ .Values.global.aws.clusterOIDC }}:sub": "system:serviceaccount:{{ .Release.Namespace }}:{{ .Release.Name }}-push"
              }
            }
          }
        ]
      }
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}

---
apiVersion: iam.aws.crossplane.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: {{ .Release.Name }}-push
spec:
  providerConfigRef:
    name: {{ .Values.global.providerConfigRefName }}
  forProvider:
    policyArnRef:
      name: {{ .Release.Name }}-push

    roleNameRef:
      name: {{ .Release.Name }}-push

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-push
  namespace: {{ .Release.Namespace }}
  annotations:
    # IRSA annotation linking to IAM role
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ .Values.global.aws.account }}:role/{{ .Release.Name }}-push
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: service-account

---
apiVersion: external-secrets.io/v1
kind: ClusterSecretStore
metadata:
  name: {{ .Release.Name }}-push
spec:    
  provider:
    aws:
      # Service type - SecretsManager or ParameterStore
      service: SecretsManager
      
      # AWS Region where secrets are stored
      region: {{ .Values.global.aws.region }}
            
      auth:
        jwt:
          serviceAccountRef:
            name: {{ .Release.Name }}-push
            namespace: {{ .Release.Namespace }}
      
      # Optional: Secrets Manager specific configuration
      secretsManager:
        forceDeleteWithoutRecovery: true
      
---
{{- end }}

apiVersion: generators.external-secrets.io/v1alpha1
kind: ClusterGenerator
metadata:
  name: {{ .Release.Name }}-password
spec:
  kind: Password
  generator:
    passwordSpec:
      length: 32
      digits: 5
      symbols: 1
      symbolCharacters: "~!%+="
      noUpper: false
      allowRepeat: true

