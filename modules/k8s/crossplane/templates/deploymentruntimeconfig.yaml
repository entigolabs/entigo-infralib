{{- if .Values.installProvider }}
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  name: aws-{{ .Release.Name }}
spec:
  deploymentTemplate:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        argocd.argoproj.io/sync-wave: "1"
        eks.amazonaws.com/role-arn: {{ .Values.awsRole }}
        helm.sh/resource-policy: keep
    spec:
      selector: {}
      strategy: {}
      template:
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: tools
                    operator: In
                    values:
                    - "true"
                weight: 90
          containers: null
          securityContext:
            fsGroup: 2000
          serviceAccountName: aws-crossplane
          tolerations:
          - effect: NoSchedule
            key: tools
            operator: Equal
            value: "true"
  serviceAccountTemplate:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        argocd.argoproj.io/sync-wave: "1"
        eks.amazonaws.com/role-arn: {{ .Values.awsRole }}
        helm.sh/resource-policy: keep
  serviceTemplate:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        argocd.argoproj.io/sync-wave: "1"
        eks.amazonaws.com/role-arn: {{ .Values.awsRole }}
        helm.sh/resource-policy: keep 
{{- end }}
