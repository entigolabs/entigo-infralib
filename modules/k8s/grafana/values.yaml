awsAccount: ""
awsRegion: ""
clusterOIDC: ""
providerConfigRefName: aws-crossplane-system

admin_password: ""
admin_user: ""

grafana:
  enabled: true

  
  fullnameOverride: "grafana"

  # plugins:
  #   - https://grafana.com/api/plugins/marcusolsson-json-datasource/versions/1.3.3/download
  annotations:
    kube-score/ignore: pod-networkpolicy,pod-probes

  resources: 
    limits:
      cpu: 1000m
      memory: 512Mi
      ephemeral-storage: 10Gi
    requests:
      cpu: 10m
      memory: 64Mi
      ephemeral-storage: 1Gi
  networkPolicy:
    enabled: true
    ingress: true
    allowExternal: true
    egress:
      enabled: false
  envValueFrom:
    #tooling_acc_id:
    #  secretKeyRef:
    #    name: grafana-cloudwatch-tooling
    #    key: id
    #tooling_sec_key:
    #  secretKeyRef:
    #    name: grafana-cloudwatch-tooling
    #    key: key
    #billing_external_id:
    #  secretKeyRef:
    #    name: grafana-cloudwatch-billing-access
    #    key: external_id


  serviceAccount:
    create: true
    name:
    nameTest:
    annotations:
      eks.amazonaws.com/role-arn: 'arn:aws:iam::0000000000:role/grafana-cloudwatch-access'
    autoMount: true
  # deploymentStrategy:
  #   type: Recreate
  persistence:
    enabled: true
    storageClassName: "gp3"
    size: 10Gi
  admin:
    existingSecret: grafana
    userKey: admin-user
    passwordKey: admin-password
  service:
    type: ClusterIP
  serviceMonitor:
    enabled: false
  testFramework:
    enabled: false
  tolerations:
    - key: "mon"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  nodeSelector:
    mon: "true"
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/group.name: internal
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/scheme: internal
      alb.ingress.kubernetes.io/success-codes: 200-499
      alb.ingress.kubernetes.io/target-type: ip
      # kubernetes.io/ingress.class: alb
    path: /
    hosts:
    - domain.com
    #extraPaths:
    # - path: /*
    #   backend:
    #     serviceName: ssl-redirect
    #     servicePort: use-annotation
    tls:
    - hosts:
      - grafana.aws-internal.delfi.net
  grafana.ini:
    default:
      instance_name: Grafana
    server:
      root_url: https://grafana.aws-internal.entigo.com
    auth.azuread:
      name: Azure AD
      enabled: true
      allow_sign_up: true
      auto_login: false
      client_id: asd
      client_secret: asd
      scopes: openid email profile
      auth_url: asd
      token_url: asd
      allowed_domains:
      allowed_groups:
      role_attribute_strict: false
      allow_assign_grafana_admin: false
      skip_org_role_sync: false

#      auth.basic:
#        enabled: true
#      auth.proxy:
#        enabled: true
#        header_name: "X-WEBAUTH-USER"
#        header_property: "username"
#        headers: "Name:X-WEBAUTH-NAME Email:X-WEBAUTH-EMAIL Groups:X-WEBAUTH-GROUPS"
#        auto_sign_up: true
#      users:
#        auto_assign_org: true
#        auto_assign_org_role: "Editor"


###
#### This is the sidecar to keep secrets and datasources in sync

  sidecar:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
        ephemeral-storage: 10Gi
      requests:
        cpu: 10m
        memory: 32Mi
        ephemeral-storage: 1Gi
    alerts:
      enabled: true
    dashboards:
      enabled: true
    datasources:
      enabled: true

  initChownData:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
        ephemeral-storage: 10Gi
      requests:
        cpu: 10m
        memory: 32Mi
        ephemeral-storage: 1Gi
